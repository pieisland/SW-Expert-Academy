#include<iostream>
#include<cstring>

using namespace std;

/*
1220. Magnetic
*/

int map[100][100];

int main(void) {

	for (int t = 1; t <= 10; t++) {
		int _100;
		cin >> _100;//도대체 왜 받는건지 모르겠네 ㅋㅋㅋ
		for (int i = 0; i < 100; i++) {
			for (int j = 0; j < 100; j++) {
				cin >> map[i][j];
			}
		}

		int ans = 0;

		//떨어질 수 있는 것들은 떨어뜨린다. 0으로 표시한다.
		//한 열씩 본다.
		//1이면 N극으로 가서 위로 떨어져야 되고
		//2이면 S극으로 가서 아래로 떨어져야합니다.
		for (int j = 0; j < 100; j++) {
			for (int i = 0; i < 100; i++) {
				if (map[i][j] == 1) { //위로 가면서 확인한다.
					int check = 1;
					for (int y = i - 1; y >= 0; y--) {
						if (map[y][j] == 2) {
							check = 0;
							break;
						}
					}
					//마지막까지 마주치는 것 없이 떨어질 수 있다면
					//그걸 0으로 만들어줍니다.
					if (check) map[i][j] = 0;
				}
				else if (map[i][j] == 2) {
					int check = 1;
					for (int y = i + 1; y < 100; y++) {
						if (map[y][j] == 1) {
							check = 0;
							break;
						}
					}
					if (check) map[i][j] = 0;
				}
			}
		}

		//교착상태의 개수 세기.
		//다른 수로 바뀌는 변화의 수를 교착상태 개수라고 세는 걸로 생각했어요..

		for (int j = 0; j < 100; j++) {
			int one = 0;
			int two = 0;
			for (int i = 0; i < 100; i++) {
				if (map[i][j] == 1) one++;
				if (map[i][j] == 2) two++;
				//if (map[i][j] == 1 || map[i][j] == 2) {
					//if (bNum == 2 && map[i][j] == 1) {
					//	ans++;
					//}

					//bNum = map[i][j];
				//}
				//bNum = map[i][j];

				//if (map[i][j] == 1 || map[i][j] == 2) {
				//	if (bnum == 0) //아직 아무것도 저장 안 한 상태
				//		bnum = map[i][j];
				//	else {
				//		if (bnum != map[i][j]) {
				//			ans++;
				//			bnum = map[i][j];
				//		}
				//	}
				//}
			}
			int tmp = one < two ? one : two;
			ans += tmp;
		}

		cout << "#" << t << " " << ans << endl;
	}
}
