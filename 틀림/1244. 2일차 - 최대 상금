#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>

using namespace std;

vector<pair<int, int>> changePair;
vector<int> sel;
int number[6];
int answer; //마지막에 초기화를 해야겠네..

/*
200316
1244. [S/W 문제해결 응용] 2일차 - 최대 상금

모든 경우의 수라고 하면 dfs 밖에 생각이 안나고.
그러다보니 이런 걸 계속 하게 되고.
시간 초과되고..;
호미로 할 수 있는 걸 불도저로 하는 격이라고 해야되나.

정답 자체는 잘 나오는 걸 확인했다.
하지만 문제는 다른 방법을 원함.

끙..
*/


void showNumber(int nums[6], int size) {
	cout << "함수 작동 잘 되는지 보자" << endl;
	for (int i = 0; i < size; i++)
		cout << nums[i] << " ";
	cout << endl;
}

void dfs1(int start, int myCnt, int numSize) {
	//두 개 선택 완료했다.
	if (myCnt == 2) { //결국.. 누구를 선택을 했는지.. 저장을 해야되는데??
		changePair.push_back({ sel[0], sel[1] });

		return;
	}

	if (start >= numSize) {
		return;
	}

	for (int i = start; i < numSize; i++) {
		sel.push_back(i);
		dfs1(i + 1, myCnt + 1, numSize);
		sel.pop_back();
	}
}

void dfs2(int myCnt, int changeCnt, int numSize) {
	if (myCnt == changeCnt) {
		//실제로 순서를 바꿀놈..
		int tmpNumber[6];
		for (int i = 0; i < 6; i++)
			tmpNumber[i] = number[i];

		for (int i = 0; i < sel.size(); i++) {
			int f = changePair[sel[i]].first;
			int s = changePair[sel[i]].second;
			
			//둘을 변경한다.
			int tmp = tmpNumber[f];
			tmpNumber[f] = tmpNumber[s];
			tmpNumber[s] = tmp;

			//숫자 배열을 변경해야되는데..
		}

		//이걸 이제 숫자로 바꾸어서 지금 값과 비교를 해야한다..
		//가장 큰 값을 찾아야 하기 때문이지..
		//지금 배열에 들어있는 것을 숫자로 변경하기 위한
		//작업이 필요합니다.
		int tmpAns = 0;
		for (int i = 0; i < numSize; i++) {
			tmpAns += tmpNumber[i] * (int)pow(10, numSize - 1 - i);
		}

		//cout << "tmpAns는 :" << tmpAns << endl;
		if (tmpAns > answer)
			answer = tmpAns;

		return;
	}

	//dfs1에서 구한 애들에 대해서 중복 선택 가능...
	for (int i = 0; i < changePair.size(); i++) {
		sel.push_back(i);
		dfs2(myCnt + 1, changeCnt, numSize);
		sel.pop_back();
	}
}

void showDfs1() {
	for (int i = 0; i < changePair.size(); i++) {
		cout << changePair[i].first << "  " << changePair[i].second << endl;
	}
}

int main() {

	int tc;
	cin >> tc;
	for (int t = 1; t <= tc; t++) {
		int num;
		cin >> num;
		int changeCnt;
		cin >> changeCnt;

		int numSize; //우리가 받은 숫자가 몇 자리수인지 알고싶어.
		string numToString = to_string(num);
		numSize = numToString.length(); //numSize자리 수이구나.
		for (int i = 0; i < numSize; i++) {
			//문자를 다시 숫자로
			number[i] = numToString[i] - '0';
		}

		dfs1(0, 0, numSize);
		//showDfs1();
		dfs2(0, changeCnt, numSize);

		printf("#%d %d\n", t, answer);
		answer = 0;
		//number를 초기화를 해야할까..?
		changePair.clear();
		sel.clear();
		for (int i = 0; i < 6; i++)
			number[i] = 0;
	}

	return 0;
}
