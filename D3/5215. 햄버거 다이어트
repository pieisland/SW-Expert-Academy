#include<iostream>
#include<string>
#include <math.h>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;

/*
200422
5215. 햄버거 다이어트
이 문제 같은 경우는 고르는 개수가 정해져있지 않아서
좀 당황했었는데
가지치기만 잘 해주면 되는 문제였다.
시간도 넉넉해서 편하게 dfs 돌리면 되는 문제.
*/

//최대 20개라고 해서.
int ingredient[20][2]; //점수와 칼로리.
int n, l;
int answer;

//시작 인덱스, 지금까지 더한 값, 제한 칼로리, 나의 만족도
void dfs(int start, int sumVal, int score) {
	
	//정해진 수가 없어서 언제 멈춰야되는건지 모르겠는데요...???
	//그냥 할 때 마다 검사해야되는건가..?
	if (sumVal > l) return;

	//칼로리 더한 값이 제한 값 이하면서 나의 지금 값이 더 크면 변경
	if (score > answer) answer = score;

	//아니 이게 근데 되지 않을텐데.
	if (start >= n) return;//범위넘으면 return;

	for (int i = start; i < n; i++) {
		dfs(i + 1, sumVal+ingredient[i][1], score + ingredient[i][0]);
	}
}

void clearIngre() {
	for (int i = 0; i < 20; i++) {
		ingredient[i][0] = 0;
		ingredient[i][1] = 0;
	}
}

int main(void) {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	int tc;
	cin >> tc;

	for (int t = 1; t <= tc; t++) {
		clearIngre();

		cin >> n >> l;
		for (int i = 0; i < n; i++) {
			cin >> ingredient[i][0] >> ingredient[i][1];
		}
		dfs(0, 0, 0);

		cout << "#" << t << " " << answer << endl;
	}

	return 0;
}
