#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>
#include<math.h>
using namespace std;

/*
200324
1215. [S/W 문제해결 기본] 3일차 - 회문1
char를 scanf로 하나씩 받으면 좀 이상하게 밀리는 게 있구나.
예전에 알았던 것 같은데 또 까먹었네.
그냥 cout으로 받는 게 나을듯.
이게 길이가 홀수일 때와 짝수일 때가 동일하다는 걸 알고 가자.
*/

char map[8][8];
char map2[8][8];

void showMaps() {
	cout << "map" << endl;
	for (int i = 0; i < 8; i++) {
		for (int j = 0; j < 8; j++) {
			cout << map[i][j] << " ";
		}
		cout << endl;
	}
	cout << "map2" << endl;
	for (int i = 0; i < 8; i++) {
		for (int j = 0; j < 8; j++) {
			cout << map2[i][j] << " ";
		}
		cout << endl;
	}
}

int isPelinDrome(vector<char> pel) {
	int size = pel.size();
	
	for (int i = 0; i < size / 2; i++) {
		if (pel[i] != pel[size - 1 - i])
			return 0;
	}
	return 1;
}

int main()
{
	for (int t = 1; t <= 10; t++) {
		int pLen;
		cin >> pLen;
		
		char ch;
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j < 8; j++) {
				cin >> ch;
				//가로세로로 검사하기 귀찮으니 세로 형태를 띄도록 map2를 만들었다.
				map[i][j] = ch;
				map2[j][i] = ch;
			}
		}

		//showMaps();

		int ans = 0;
		//팰린드롬인지를 검사합니다.
		for (int i = 0; i < 8; i++) {
			for (int j = 0; j <= 8 - pLen; j++) {
				vector<char> pelindrome;
				vector<char> pelindrome2;
				for (int k = 0; k < pLen; k++) {
					pelindrome.push_back(map[i][j + k]);
					pelindrome2.push_back(map2[i][j + k]);
				}
				if (isPelinDrome(pelindrome))
					ans++;
				if (isPelinDrome(pelindrome2))
					ans++;
			}
		}
		cout << "#" << t << " " << ans << endl;
	}
	return 0;
}
