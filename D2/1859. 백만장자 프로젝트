#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
#include<queue>

using namespace std;

/*

D2/1859. 백만장자 프로젝트.
앞에서 생각하면 마지막 처리라거나 그런 게 힘들더라.
그래서 그것때문에 좀 망한 것 같은데
어떻게 뒤에서부터 한다는 걸 생각하게 되는지 그런 걸 모르겠다.
나랑 머리 자체가 다른 사람들인 것 같다.

이렇게만 보면 엄청 간단한 문제인데..
ㅎㅎ. 슬픔.
*/

int num[1000000];

int main() {

	int tc;
	cin >> tc;

	for (int t = 1; t <= tc; t++) {
		int n;
		//int형을 넘어갈 수 있기 때문에 ans를 long long으로 잡아줘야 한다.
		long long ans = 0;
		cin >> n;
		for (int i = 0; i < n; i++)
			cin >> num[i];

		//마지막 값을 최대 값으로 넣어준 후에
		int maxVal = num[n - 1];
		for (int i = n - 1; i >= 0; i--) {
			if (maxVal >= num[i]) //작거나 같은 값이라면 
				ans += maxVal - num[i]; //제일 큰 값에 해당 값을 팔았을 때 남은 수익을 더해준다.
			else
				maxVal = num[i]; //지금이 더 큰 값이라면 값 갱신.
			//값을 갱신한다는 건 이제부터 이걸로 팔거라는 거..
			//제발 이런 문제 좀 이해했으면.
		}
		printf("#%d %lld\n", t, ans);
	
		//초기화
		for (int i = 0; i < n; i++)
			num[i] = 0;
	}


	/*int tc;
	cin >> tc;
	for (int t = 1; t <= tc; t++) {
		int n;
		cin >> n;
		vector<int> value;
		for (int i = 0; i < n; i++) {
			int num;
			cin >> num;
			value.push_back(num);
		}

		//
		long long int answer = 0;
		int idx = 0;
		while (idx < n) {
			//cout << "와일문" << endl;
			int maxVal = value[idx];
			long long  buy = value[idx];
			int cnt = 1;
			for (int i = idx + 1; i < n; i++) {
				if (value[i] >= maxVal)
				{
					maxVal = value[i];
					buy += value[i];
					cnt++;
					//cout << "첫번째" << endl;

					//마지막이 제일 크다면.. 여기서 팔아야됩니다.
					if (i == n - 1) {
						answer += maxVal * cnt - buy;
						idx = n;
						break;

					}

				}
				else if (value[i] < maxVal) {
					idx = i;
					answer += maxVal * cnt - buy;
					//cout << "두번째" << endl;

					//마지막이 작아진거라면.. 끝.
					if (idx == n - 1) idx = n;

					break;
				}
			}
		}
		printf("#%d %lld\n", t, answer);
		value.clear();
	}*/

	return 0;
}
